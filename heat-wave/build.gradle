buildscript {
  repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/release' }
  }
  dependencies {
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.6.RELEASE'
  }
}

eclipse {
   project {
      name = 'UrlShortener2015.heatwave'
   }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot'

mainClassName = 'urlshortener2015.heatwave.Application'

task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "src/main/resources/urlTesters.xsd"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema) {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.6, target: 1.6, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}

task afterEclipseImport {
	dependsOn "genJaxb"
}

configurations {
    jaxb
}

jar {
    baseName = 'gs-producing-web-service'
    version =  '0.1.0'
    from genJaxb.classesDir
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // Provides the production database
    runtime 'org.hsqldb:hsqldb'
    compile 'org.springframework.boot:spring-boot-starter-websocket'
    compile 'org.springframework:spring-messaging'
	compile 'org.springframework.boot:spring-boot-starter-web:1.2.6.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jdbc:1.2.6.RELEASE'
    compile 'org.springframework.data:spring-data-mongodb:1.8.1.RELEASE'
    compile 'org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE'
    compile 'org.springframework.plugin:spring-plugin-core:1.1.0.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-ws")
	
    // Provides java script libraries for static content
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:jquery:2.1.4'
    compile 'org.glassfish.jersey.core:jersey-server:2.13'
    
    compile 'jstl:jstl:1.2'
	
    compile 'org.apache.tomcat.embed:tomcat-embed-jasper:8.0.28'
    
    compile 'commons-codec:commons-codec:1.9'
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'com.google.guava:guava:17.0'

	// Spring Social
	//compile("org.springframework.social:spring-social-config:1.1.0.RELEASE")
	//compile("org.springframework.social:spring-social-core:1.1.0.RELEASE")
	//compile("org.springframework.social:spring-social-security:1.1.0.RELEASE")
    compile("org.springframework.social:spring-social-facebook:2.0.3.RELEASE")
    compile("org.springframework.social:spring-social-twitter:1.1.0.RELEASE")
    compile("org.springframework.social:spring-social-web:1.1.4.RELEASE")

    // Testing framework
    testCompile 'org.springframework.boot:spring-boot-starter-test'    
    testCompile 'org.apache.httpcomponents:httpclient:4.5'
    testCompile 'com.jayway.jsonpath:json-path:0.9.1'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    
    compile("wsdl4j:wsdl4j:1.6.1")
    jaxb("com.sun.xml.bind:jaxb-xjc:2.2.4-1")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
}